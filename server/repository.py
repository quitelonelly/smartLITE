from server.shemas import TranscriptionData

def format_message_for_bot(data: TranscriptionData, manager: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.
    """
    message = "<b>üìä –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–≤–æ–Ω–∫–∞</b>\n\n"
    message += f"üë§ <b>–ú–µ–Ω–µ–¥–∂–µ—Ä:</b> {manager}\n\n"
    
    # 1. –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    message += f"1Ô∏è‚É£ <b>–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞:</b> {data.manager_evaluation.score}%\n"
    message += f"<i>{data.manager_evaluation.explanation}</i>\n\n"
    
    # –î–µ—Ç–∞–ª–∏ –æ—Ü–µ–Ω–∫–∏ (–ø–µ—Ä–µ–≤–µ–¥–µ–Ω—ã –Ω–∞ —Ä—É—Å—Å–∫–∏–π)
    aspect_translations = {
        "dialog_quality": "–ö–∞—á–µ—Å—Ç–≤–æ –¥–∏–∞–ª–æ–≥–∞",
        "logic_adherence": "–°–æ–±–ª—é–¥–µ–Ω–∏–µ –ª–æ–≥–∏–∫–∏",
        "confidence": "–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å",
        "additional_aspects": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã"
    }
    
    for aspect, detail in data.manager_evaluation.details.items():
        translated_aspect = aspect_translations.get(aspect, aspect)
        message += f"<b>{translated_aspect}:</b> {detail.score}%\n"
        message += f"<i>{detail.reason}</i>\n\n"

    # 2. –°–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    message += "2Ô∏è‚É£ <b>–°–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–∞:</b>\n"
    if data.manager_errors:
        for error in data.manager_errors:
            message += f"‚Ä¢ {error}\n"
    else:
        message += "–ù–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫\n"
    message += "\n"

    # 3. –ò—Ç–æ–≥ –¥–∏–∞–ª–æ–≥–∞
    message += f"3Ô∏è‚É£ <b>–ò—Ç–æ–≥ –¥–∏–∞–ª–æ–≥–∞:</b>\n{data.dialogue_outcomes}\n\n"

    # 4. –û—Ü–µ–Ω–∫–∞ –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ª–∏–¥–∞
    qualified = "–î–∞" if data.lead_qualification.qualified == "–¥–∞" else "–ù–µ—Ç"
    message += f"4Ô∏è‚É£ <b>–ö–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –ª–∏–¥–∞:</b> {qualified}\n"
    if data.lead_lost:
        message += f"<i>–°—Ç–∞—Ç—É—Å –ª–∏–¥–∞:</i> {data.lead_lost}\n"
    message += "\n"

    # 5. –û—Ü–µ–Ω–∫–∞ –æ—Ç—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π
    message += f"5Ô∏è‚É£ <b>–û—Ç—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞–∂–µ–Ω–∏–π:</b> {data.objection_handling.evaluation}\n"
    message += f"<i>–í–æ–∑—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª–∏:</i> {'–î–∞' if data.objection_handling.has_objections else '–ù–µ—Ç'}\n\n"

    # 6. –û—Ü–µ–Ω–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞
    readiness_map = {
        "–ù–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ": "üî¥ –ù–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ",
        "–°–ª–∞–±—ã–π –∏–Ω—Ç–µ—Ä–µ—Å": "üü° –°–ª–∞–±—ã–π –∏–Ω—Ç–µ—Ä–µ—Å", 
        "–°–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å": "üü¢ –°–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å"
    }
    readiness = readiness_map.get(data.client_readiness.level, data.client_readiness.level)
    message += f"6Ô∏è‚É£ <b>–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–∞:</b> {readiness}\n"
    message += f"<i>–ü–æ—è—Å–Ω–µ–Ω–∏–µ:</i> {data.client_readiness.explanation}\n\n"

    # 7. –£—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    confidence = "üü¢ –£–≤–µ—Ä–µ–Ω" if "—É–≤–µ—Ä–µ–Ω" in data.manager_confidence.confidence.lower() else "üî¥ –ù–µ —É–≤–µ—Ä–µ–Ω"
    message += f"7Ô∏è‚É£ <b>–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞:</b> {confidence}\n"
    if data.manager_confidence.criteria:
        message += "<i>–ö—Ä–∏—Ç–µ—Ä–∏–∏:</i>\n"
        for criterion in data.manager_confidence.criteria:
            message += f"‚Ä¢ {criterion}\n"
    message += "\n"

    # 8. –£—Ä–æ–≤–µ–Ω—å —ç–∫—Å–ø–µ—Ä—Ç–∏–∑—ã –≤ –ø—Ä–æ–¥—É–∫—Ç–µ
    expertise = data.product_expertise.level
    message += f"8Ô∏è‚É£ <b>–≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞ –≤ –ø—Ä–æ–¥—É–∫—Ç–µ:</b> {expertise}\n"
    message += f"<i>N/A:</i> {'–î–∞' if data.product_expertise.is_na else '–ù–µ—Ç'}\n\n"

    # 9. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    message += "9Ô∏è‚É£ <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n"
    if hasattr(data, 'recommendations') and data.recommendations:
        for recommendation in data.recommendations:
            if isinstance(recommendation, dict):
                error = recommendation.get('error', {})
            else:
                error = getattr(recommendation, 'error', {})
            
            if isinstance(error, dict):
                quote = error.get('quote')
                analysis = error.get('analysis')
                advice = error.get('advice')
            else:
                quote = getattr(error, 'quote', None)
                analysis = getattr(error, 'analysis', None)
                advice = getattr(error, 'advice', None)
            
            if quote:
                message += f"<b>–¶–∏—Ç–∞—Ç–∞:</b> {quote}\n"
            if analysis:
                message += f"<b>–ê–Ω–∞–ª–∏–∑:</b> {analysis}\n"
            if advice:
                message += f"<b>–°–æ–≤–µ—Ç:</b> {advice}\n"
            
            message += "---\n"
    else:
        message += "–ù–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π\n"
    
    return message