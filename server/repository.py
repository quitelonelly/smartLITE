from server.shemas import TranscriptionData

def format_message_for_bot(data: TranscriptionData, manager: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram (–∞–Ω–∞–ª–∏–∑ –ª–∏–¥–∞ –∏ –∏—Ç–æ–≥–æ–≤—ã–π –≤–µ—Ä–¥–∏–∫—Ç).
    """
    message = "üìÑ *–ê–Ω–∞–ª–∏–∑ –ª–∏–¥–∞ –∏ –∏—Ç–æ–≥–æ–≤—ã–π –≤–µ—Ä–¥–∏–∫—Ç*\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ–Ω–µ–¥–∂–µ—Ä–µ
    message += f"üë§ *–ú–µ–Ω–µ–¥–∂–µ—Ä:* {manager}\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–µ–µ –≤—Ä–µ–º—è –∑–≤–æ–Ω–∫–∞
    total_duration = sum((role.end_time - role.start_time) for role in data.role_analysis) / 1000
    message += f"‚è±Ô∏è *–û–±—â–µ–µ –≤—Ä–µ–º—è –∑–≤–æ–Ω–∫–∞:* {total_duration:.2f} —Å–µ–∫—É–Ω–¥\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑ –ª–∏–¥–∞
    message += "üîπ *–ê–Ω–∞–ª–∏–∑ –ª–∏–¥–∞:*\n"
    for stage, analysis in data.lead_analysis.stages.items():
        message += (
            f"üìå *–≠—Ç–∞–ø {stage.capitalize()}*\n"
            f"‚úÖ *–ö–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω:* {'–î–∞' if analysis.qualified else '–ù–µ—Ç'}\n"
            f"üìù *–ü—Ä–∏—á–∏–Ω–∞:* {analysis.reason}\n"
            f"üí° *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:* {analysis.recommendation if analysis.recommendation else '–ù–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'}\n\n"
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –≤–µ—Ä–¥–∏–∫—Ç –∏ –ø—Ä–æ—Ü–µ–Ω—Ç –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏
    message += (
        f"üîπ *–ò—Ç–æ–≥–æ–≤—ã–π –≤–µ—Ä–¥–∏–∫—Ç:* {data.lead_analysis.final_verdict}\n"
        f"üìù *–ü—Ä–∏—á–∏–Ω–∞:* {data.lead_analysis.final_reason}\n"
        f"üìã *–ü–æ–ª–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ:* {data.lead_analysis.final_full_reason}\n"
        f"üìä *–ü—Ä–æ—Ü–µ–Ω—Ç –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏:* {data.lead_analysis.kval_percentage}%\n\n"
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∞–ª–∏–∑ —Å–ª–æ–≤-–ø–∞—Ä–∞–∑–∏—Ç–æ–≤
    message += (
        f"üîπ *–ê–Ω–∞–ª–∏–∑ —Å–ª–æ–≤-–ø–∞—Ä–∞–∑–∏—Ç–æ–≤:*\n"
        f"{data.parasite_words_analysis}\n"
    )
    
    return message